#!/usr/bin/env ruby -w

require 'multiruby'
include Multiruby

ENV.delete 'RUBYOPT'

# Take build parameters from ARGV after --
if idx = ARGV.index('--')
  ENV['CONFIGURE'] = ARGV[idx+1..-1].join(' ')
  ARGV.replace ARGV[0...idx]
end

ARGV << "help" if ARGV.empty?

Dir.chdir root_dir
setup_dirs(false)

ARGV.each do |spec|
  case spec
  when "-h", "--help", "help" then
    help
    exit 0
  when "the_usual" then # TODO: update #help
    ARGV.push(*VERSIONS.map { |v| "mri:tar:#{v.gsub(/_/, '.')}" })
    ARGV << "build" << "update:rubygems" << "the_usual:gems"
  when "the_usual:gems" then
    system "multigem install --no-ri --no-rdoc rake minitest ZenTest gemcutter rubyforge hoe"
  when "build" then
    build_and_install
  when "clean" then
    clean
  when "list" then
    list
  when /rm:(.*)/ then
    rm $1
  when "rubygems:merge" then
    merge_rubygems
  when "rubygems:update", "update:rubygems" then
    update_rubygems
    ARGV << "build"
  when "update" then
    update
  when "tags" then
    p tags
  when "mri:svn:current" then
    ARGV << "mri:svn:releases" << "mri:svn:branches" << "build"
  when "mri:svn:releases" then
    TAGS.each do |v|
      latest = mri_latest_tag v
      abort "Can't find tag #{v}" unless latest
      ARGV << "mri:svn:tag:#{latest}:mri_rel_#{v}"
    end
    ARGV << "build"
  when /mri:svn:branch:(.*)/ then
    ver = "branches/ruby_#{$1}" unless ver == "trunk"
    svn_co "#{MRI_SVN}/#{$1}", "mri_#{$1}"
    ARGV << "build"
  when "mri:svn:branches" then
    BRANCHES.each do |v|
      ARGV << "mri:svn:branch:#{v}"
    end
    ARGV << "build"
  when /mri:svn:tag:(.*):(.*)/ then
    svn_co "#{MRI_SVN}/tags/#{$1}", $2
    ARGV << "build"
  when /mri:svn:tag:(.*)/ then
    ARGV << "mri:svn:tag:#{$1}:#{$1}" << "build"
  when /mri:list:(.*)/ then
    v   = $1
    ver = v[/\d+\.\d+/]
    url = "#{RUBY_URL}/#{ver}/"

    puts matching_versions(url, v).join("\n")
  when /mri:tar:(.*)/ then
    fetch_tar $1
    ARGV << "build"
  else
    warn "unknown spec #{spec}"
  end
end
